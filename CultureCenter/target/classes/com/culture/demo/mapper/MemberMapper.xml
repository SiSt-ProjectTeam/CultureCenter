<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.culture.demo.mapper.MemberMapper">

	<!-- 1. 마이페이지 정보 조회 -->
	<select id="selectMypageInfo" resultType="com.culture.demo.domain.MemberDTO">
	    SELECT name, m.branch_id, branch_nm, point, basket_cnt, order_class_cnt, late_class_cnt, complete_class_cnt, review_cnt
		FROM member m LEFT JOIN branch b ON m.branch_id=b.branch_id
		WHERE m.member_sq = #{member_sq}
	</select>
	
	
	<!-- 2. 회원 관심 지점 수정 -->
	<update id="updateInterestBranch">
		UPDATE member
		SET branch_id = #{itrstBrchCd}
		WHERE member_sq = #{member_sq}
	</update>
	
	
	<!-- 회원 정보 조회(동반수강자 포함) public MemberDTO selectMemberWithChild(int member_sq); -->
	<resultMap type="com.culture.demo.domain.MemberDTO" id="memberMap" >
		<id property="member_sq" column="member_sq" />
		<result property="id" column="id" />
		<result property="pw" column="pw" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="birth_dt" column="birth_dt" />
		<result property="m_birth_dt" column="m_birth_dt" />
		<result property="addr" column="addr" />
		<result property="car_no" column="car_no" />
		<result property="branch_id" column="branch_id" />
		<result property="point" column="point" />
		<result property="basket_cnt" column="basket_cnt" />
		<result property="order_class_cnt" column="order_class_cnt" />
		<result property="late_class_cnt" column="late_class_cnt" />
		<result property="complete_class_cnt" column="complete_class_cnt" />
		<result property="review_cnt" column="review_cnt" />
		<result property="faq_cnt" column="faq_cnt" />

		<!-- 동반수강자 자녀list ofType으로 참조 -->
		<collection property="childrenList"  ofType="com.culture.demo.domain.ChildrenDTO">
			<id property="children_sq" column="children_sq" />
			<result property="children_nm" column="children_nm" />
			<result property="member_sq" column="member_sq" />
			<result property="child_birth_dt" column="child_birth_dt" />
			<result property="gender" column="gender" />
			<result property="realGender" column="realGender" />
		</collection>
	</resultMap>
	<select id="selectMemberWithChild" resultMap="memberMap">
	SELECT 
    m.member_sq, id, pw, name, email, phone
    , m.birth_dt, TO_CHAR(TRUNC(m.birth_dt),'yyyy.MM.dd') AS m_birth_dt
    , addr, branch_id, point, basket_cnt, order_class_cnt, late_class_cnt
    , complete_class_cnt, review_cnt, faq_cnt, car_no
    , children_sq
    , TO_CHAR(TRUNC(ac.birth_dt),'yyyy.MM.dd') AS child_birth_dt
    , gender, DECODE(gender,'F','여성','M','남성') AS realGender
    , children_nm
	FROM member m 
	LEFT JOIN accompanying_children ac ON m.member_sq = ac.member_sq
	WHERE m.member_sq = #{member_sq}
	ORDER BY ac.children_sq
	</select>
	
	<!-- 동반수강자(자녀) 추가 int insertChildren(ChildrenDTO dto) -->
	<insert id="insertChildren">
	INSERT INTO accompanying_children
	VALUES(seq_children.NEXTVAL,#{member_sq},#{child_birth_dt},#{gender},#{children_nm})
	</insert>
	<!-- 동반수강자(자녀) 삭제 int deleteChildren(int children_sq) -->
	<delete id="deleteChildren">
	DELETE FROM accompanying_children
	WHERE children_sq = #{children_sq}
	</delete>
	
	<!-- 4. 회원 정보 조회(시큐리티 정보 포함) -->
	<resultMap type="com.culture.demo.domain.MemberDTO" id="memberAuthorityMap" >
		<id property="member_sq" column="member_sq" />
		<result property="id" column="id" />
		<result property="pw" column="pw" />
		<result property="enabled" column="enabled" />

		<!-- 권한 -->
		<collection property="authList"  ofType="com.culture.demo.domain.AuthVO" >
			<result property="username" column="username" />
			<result property="authority" column="authority" />			
		</collection>
	</resultMap>
	<select id="selectMemberWithAuthority" resultMap="memberAuthorityMap">
		SELECT m.member_sq, id, pw, enabled, ma.member_sq username, authority
		FROM member m LEFT JOIN member_authorities ma ON m.member_sq = ma.member_sq
		WHERE id = #{id}
	</select>
	
	
	<!-- 5. 회원 가입 -->
	<!-- public int insertMember(MemberDTO memberDTO); -->
	<insert id="insertMember">
		INSERT INTO member (member_sq, id, pw, name, email, birth_dt, addr)
		VALUES ( seq_member.nextval, #{memberDTO.id}, #{memberDTO.pw}, #{memberDTO.name}, #{memberDTO.email}, '1997-09-21', #{memberDTO.addr} )
	</insert>
	<!-- 일반회원 권한 설정 -->
	<insert id="insertAuth">
		INSERT INTO member_authorities (member_sq, authority)
		VALUES ( seq_member.currval, 'ROLE_USER')
	</insert>
	
	<!--  아이디 중복확인  -->
	<select id="idCheck" resultType="int"> 
		SELECT COUNT(*) 
		FROM member 
		WHERE id = #{id} 
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" resultType="string" >
	    SELECT id
	    FROM member
	    WHERE name = #{name}
	    AND phone = #{phone}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findPw" resultType="string" >
	    SELECT pw
	    FROM member
	    WHERE id = #{id}
	    AND phone = #{phone}
	</select>
	
</mapper>