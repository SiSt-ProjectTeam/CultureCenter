<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.culture.demo.mapper.ReviewMapper">
	
	<!-- 후기 목록조회 -->
	
	<select id="getReviewList" parameterType="map" resultType="com.culture.demo.domain.ReviewDTO">
SELECT * 
FROM (
    SELECT COUNT(DISTINCT review_sq) OVER() tot_cnt
    		, DENSE_RANK() OVER(ORDER BY review_sq) rank
    		, r.review_content, r.member_sq, r.review_sq, b.branch_tp_id, b.branch_id, b.branch_nm, r.review_title, c.class_id, c.class_nm, 
           CASE  
               WHEN LENGTH(m.name) = 2 THEN  
                   SUBSTR(m.name, 1, 1) || '*'  
               ELSE  
                   SUBSTR(m.name, 1, 1) || LPAD('*', LENGTH(m.name) - 2, '*') || SUBSTR(m.name, LENGTH(m.name), 1)  
           END AS name, r.date_writingout_dt, r.comment_cnt, r.rating, cbs.open_smst_id, c.class_img
           , EXTRACT(YEAR FROM date_writingout_dt) writing_year, t.member_sq AS teacher_sq, cbs.class_semester_sq
    FROM review r 
    LEFT JOIN detail_class d ON r.detail_class_sq = d.detail_class_sq 
    JOIN class_by_semester cbs ON d.class_semester_sq = cbs.class_semester_sq 
    JOIN class c ON cbs.class_id = c.class_id 
    JOIN member m ON r.member_sq = m.member_sq 
    JOIN branch b ON c.branch_id = b.branch_id
    JOIN teacher t ON c.member_sq = t.member_sq 
    <where>

            <if test="branch_id != null and branch_id != 0">
           		 AND b.branch_id = #{branch_id}
            </if>
            <if test="dto.q != null and dto.q != '' ">
                 AND (review_title LIKE '%' || #{dto.q} || '%' OR review_content LIKE '%' || #{dto.q} || '%')
            </if>
     </where>        
            <if test="dto.orderSet == 'A'">   
            	ORDER BY date_writingout_dt DESC 
            </if>
                  		
         	<if test="dto.orderSet == 'B'">
            	ORDER BY rating DESC         				
         	</if>   
         ) a  
         <![CDATA[
         WHERE (#{dto.pageIndex}-1)*#{dto.listCnt} + 1 <= rank AND rank <= #{dto.pageIndex}*#{dto.listCnt}
      	]]>
	</select>
	
	<!-- 수강후기 상세페이지 -->
<select id="dtlReview" parameterType="map" resultType = "com.culture.demo.domain.ReviewDTO">
SELECT
    CASE 
        WHEN LENGTH(u.name) = 2 THEN SUBSTR(u.name, 1, 1) || '*' 
        ELSE SUBSTR(u.name, 1, 1) || LPAD('*', LENGTH(u.name) - 2, '*') || SUBSTR(u.name, LENGTH(u.name), 1) 
    END AS name,
    EXTRACT(YEAR FROM rd.date_writingout_dt) AS writing_year, date_writingout_dt, review_title, rating, review_img, review_content, t.member_sq AS teacher_sq,
    c.class_img, c.class_st_id, lrclsctegry, mdclsctegry, smclsctegry, c.class_nm, b.branch_nm, t.teacher_nm, e.smst_nm, cbs.schedule_start_dt, cbs.schedule_end_dt  
FROM (
    SELECT DISTINCT r.review_sq, d.detail_class_sq, r.member_sq, r.review_title, r.rating, r.review_img, r.review_content, r.date_writingout_dt
    FROM review r LEFT JOIN detail_class d ON r.detail_class_sq = d.detail_class_sq
    WHERE r.review_sq = #{reviewDTO.review_sq}
) rd
	JOIN class_by_semester cbs ON rd.detail_class_sq = cbs.class_semester_sq 
	JOIN class c ON cbs.class_id = c.class_id 
	JOIN member u ON rd.member_sq = u.member_sq 
	JOIN class_type p ON c.class_type_id = p.class_type_id 
	JOIN class_state a ON c.class_st_id = a.class_st_id 
	JOIN branch b ON c.branch_id = b.branch_id 
	JOIN teacher t ON c.member_sq = t.member_sq 
	JOIN semester e ON cbs.open_smst_id = e.open_smst_id 
	JOIN small_category s ON p.smclsctegrycd = s.smclsctegrycd 
	JOIN medium_category m ON p.mdclsctegrycd = m.mdclsctegrycd 
	JOIN large_category l ON p.lrclsctegrycd = l.lrclsctegrycd
<where>
	<if test="reviewDTO.branch_id != null and branch_id != 0">
		AND b.branch_id = #{reviewDTO.branch_id}
	</if>
</where>
	</select>
	
	<!-- 수강후기 댓글 -->
	<!-- 
	<select id="getCommtList" parameterType="map" resultType = "com.culture.demo.domain.ReviewDTO">
	SELECT COUNT(DISTINCT rc.comment_sq) OVER() tot_cnt
    	   , DENSE_RANK() OVER(ORDER BY rc.comment_sq) rank
		   , CASE WHEN LENGTH(m.name) = 2 
            	THEN SUBSTR(m.name, 1, 1) || '*' 
            	ELSE SUBSTR(m.name, 1, 1) || LPAD('*', LENGTH(m.name) - 2, '*') || SUBSTR(m.name, LENGTH(m.name), 1) END AS name
        	, TO_CHAR(rc.write_dt, 'YYYY.MM.DD') AS write_dt, rc.comment_content
	FROM review_comm rc JOIN member m ON m.member_sq = rc.member_sq
	WHERE rc.review_sq = #{review_sq}
	     <![CDATA[
         AND (#{dto.pageIndex}-1)*#{dto.listCnt} + 1 <= rank AND rank <= #{dto.pageIndex}*#{dto.listCnt}
     	]]>
	</select>
 -->
</mapper>