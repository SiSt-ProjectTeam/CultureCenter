<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.culture.demo.mapper.AppSearchMapper">

	<!-- 강좌 정보 가져오기 -->
	<select id="selectClassList" resultType="com.culture.demo.domain.ClassDTO">
		SELECT *
		FROM (
		    SELECT COUNT(DISTINCT d.detail_class_sq) OVER() tot_cnt
			    , DENSE_RANK() OVER(ORDER BY d.detail_class_sq) rank
			    , d.detail_class_sq, c.branch_id, TO_CHAR(open_year, 'YYYY') open_year, s.open_smst_id, s.class_semester_sq, class_img, class_st, branch_nm, class_nm, smst_nm, m.name, start_time, end_time, class_cnt, class_fee
				, mon, tue, wed, thu, fri, sat, sun 																																		 					
			FROM class c JOIN class_by_semester s ON s.class_id = c.class_id 																																	
				LEFT JOIN detail_class d ON s.class_semester_sq = d.class_semester_sq 																															
				LEFT JOIN class_state st ON st.class_st_id = c.class_st_id 																																		
				LEFT JOIN branch b ON b.branch_id = c.branch_id 																																				
				LEFT JOIN semester sem ON sem.open_smst_id = s.open_smst_id 																																	
				LEFT JOIN member m ON m.member_sq = c.member_sq 																																				
			    LEFT JOIN class_type ct ON ct.class_type_id = c.class_type_id																																	
			    LEFT JOIN large_category lc ON lc.lrclsctegrycd = ct.lrclsctegrycd 																																
			    LEFT JOIN medium_category mc ON mc.mdclsCtegryCd = ct.mdclsctegrycd																																
			    LEFT JOIN small_category sc ON sc.smclsctegrycd = ct.smclsctegrycd																																
			WHERE c.branch_id = #{branch_id}  
		
		<!-- 카테고리 클릭 -->
		<if test="searchBranchDTO.lrclsCtegryCd neq null and !searchBranchDTO.lrclsCtegryCd.equals('')">
			AND lc.lrclsCtegryCd = #{searchBranchDTO.lrclsCtegryCd} 
		</if>
		<if test="searchBranchDTO.mdclsCtegryCd neq null and !searchBranchDTO.mdclsCtegryCd.equals('')">
			AND mc.mdclsCtegryCd = #{searchBranchDTO.mdclsCtegryCd} 
		</if>
		<if test="searchBranchDTO.smclsCtegryCd neq null and !searchBranchDTO.smclsCtegryCd.equals('')">
			AND sc.smclsctegrycd = #{searchBranchDTO.smclsCtegryCd} 
		</if>
		
		<!-- 학기 -->
		<if test="yyl != null and yyl.length > 0">
			AND (
			<foreach collection="yyl" item="yy" separator=" OR ">
				TO_CHAR(open_year, 'YYYY') || '||' || s.open_smst_id = #{yy}
			</foreach>
			) 
		</if>
		
		<!-- 강좌구분 -->
		<if test="lectcll != null and lectcll.length > 0">
			AND (
			<foreach collection="lectcll" item="lectcl" separator=" OR ">
				class_div_id = #{lectcl}
			</foreach>
			) 
		</if>

		<!-- 강좌상태 -->
		<if test="lectstl != null and lectstl.length > 0">
			AND (
			<foreach collection="lectstl" item="lectst" separator=" OR ">
				c.class_st_id = #{lectst}
			</foreach>
			) 
		</if>
		
		<!-- 요일 -->
		<if test="dayl != null and dayl.length > 0">
			AND (
	    	<foreach collection="dayl" item="day" separator=" OR ">
		        <choose>
		             <when test="day == 1">
		                mon = 'Y'
		            </when>
		            <when test="day == 2">
		                tue = 'Y'
		            </when>
		            <when test="day == 3">
		                wed = 'Y'
		            </when>
		            <when test="day == 4">
		                thu = 'Y'
		            </when>
		            <when test="day == 5">
		                fri = 'Y'
		            </when>
		            <when test="day == 6">
		                sat = 'Y'
		            </when>
		            <when test="day == 7">
		                sun = 'Y'
		            </when>
		        </choose>
			</foreach>
		   	) 
		</if>
		
		<!-- 시간대 -->
		<if test="timel != null and timel.length > 0">
		    AND (
		    <foreach collection="timel" item="time"  separator=" OR ">
		        <choose>
		            <when test='time.equals("A")'>
			            <![CDATA[ start_time < 1000 ]]>
		            </when>
		            <when test='time.equals("B")'>
		                start_time BETWEEN 1000 AND 1200
		            </when>
		            <when test='time.equals("C")'>
		                start_time BETWEEN 1200 AND 1400
		            </when>
		            <when test='time.equals("D")'>
		                start_time BETWEEN 1400 AND 1600
		            </when>
		            <when test='time.equals("E")'>
		                start_time BETWEEN 1600 AND 1800
		            </when>
		            <when test='time.equals("F")'>
		                start_time BETWEEN 1800 AND 2000
		            </when>
		            <when test='time.equals("G")'>
		                <![CDATA[ start_time > 2000 ]]>
		            </when>
		        </choose>
		    </foreach>
		    ) 
		</if>
		
		<!-- 수강료 - 범위 -->
		<if test="amtl != null and amtl.length > 0">
		    AND (
		    <foreach collection="amtl" item="amt" separator=" OR ">
		        <choose>
		            <when test='amt.equals("A")'>
		                class_fee = 0
		            </when>
		            <when test='amt.equals("B")'>
		                <![CDATA[ class_fee < 5000 ]]>
		            </when>
		            <when test='amt.equals("C")'>
		                class_fee BETWEEN 5000 AND 10000
		            </when>
		            <when test='amt.equals("D")'>
		                class_fee BETWEEN 10000 AND 30000
		            </when>
		            <when test='amt.equals("E")'>
		                class_fee BETWEEN 30000 AND 50000
		            </when>
		            <when test='amt.equals("F")'>
		                class_fee BETWEEN 50000 AND 100000
		            </when>
		            <when test='amt.equals("G")'>
		                <![CDATA[ class_fee < 100000 ]]>
		            </when>
		        </choose>
		    </foreach>
		    ) 
		</if>
		
		<!-- 수강료 - 입력(최소) -->
		<if test="searchBranchDTO.stAmt != null and !searchBranchDTO.stAmt.isEmpty()">
			<![CDATA[ AND class_fee > #{searchBranchDTO.stAmt} ]]>
		</if>
		
		<!-- 수강료 - 입력(최대) -->
		<if test="searchBranchDTO.endAmt != null and !searchBranchDTO.endAmt.isEmpty()">
			<![CDATA[ AND class_fee < #{searchBranchDTO.endAmt} ]]>
		</if>
		
		<!-- 강좌명 or 강사명으로 검색 -->
		<if test="searchBranchDTO.q != null and !searchBranchDTO.q.isEmpty()">
			AND ( class_nm LIKE '%' || #{searchBranchDTO.q} || '%' OR name LIKE '%' || #{searchBranchDTO.q} || '%' ) 
		</if>
		
		<!-- 정렬 -->
		<if test="searchBranchDTO.orderSet != null and !searchBranchDTO.orderSet.isEmpty()">
		    <choose>
		        <when test='searchBranchDTO.orderSet == "A"'>
		            ORDER BY reception_end_dt ASC 
		        </when>
		        <when test='searchBranchDTO.orderSet == "B"'>
		            ORDER BY people_tot ASC 
		        </when>
		        <when test='searchBranchDTO.orderSet == "C"'>
		            ORDER BY schedule_start_dt ASC 
		        </when>
		        <when test='searchBranchDTO.orderSet == "D"'>
		            ORDER BY class_fee ASC 
		        </when>
		        <when test='searchBranchDTO.orderSet == "E"'>
		            ORDER BY class_fee DESC 
		        </when>
		    </choose>
		</if>
		<![CDATA[
			) 
			WHERE (#{searchBranchDTO.pageIndex}-1)*#{searchBranchDTO.listCnt} + 1 <= rank AND rank <= #{searchBranchDTO.pageIndex}*#{searchBranchDTO.listCnt}
		]]>
	</select>
	
	
	<!-- 강좌 상세정보 가져오기 -->
	<select id="DetailClassInfo" resultType="com.culture.demo.domain.ClassDTO">
		SELECT s.class_id, detail_class_sq, detail_img, class_content, supplies, class_sched_desc, class_img, class_nm, class_contnet_smp, ex_charge	
		      , class_st, class_div, branch_nm, TO_CHAR(open_year, 'YYYY') open_year, smst_nm															
		      , m.name, schedule_start_dt, schedule_end_dt, start_time, end_time, class_cnt, people_tot												
		      , classroom_nm, class_fee, target_div, reception_start_dt, reception_end_dt, b.tel														
		      , mon, tue, wed, thu, fri, sat, sun, t.member_sq																						
		FROM class c RIGHT JOIN class_by_semester s ON s.class_id = c.class_id 																		
		             RIGHT JOIN detail_class d ON s.class_semester_sq = d.class_semester_sq															
		             LEFT JOIN class_state cs ON c.class_st_id = cs.class_st_id																		
		             LEFT JOIN class_division cd ON c.class_div_id = cd.class_div_id																	
		             LEFT JOIN semester sem ON sem.open_smst_id = s.open_smst_id																		
		             LEFT JOIN branch b ON c.branch_id = b.branch_id																					
		             LEFT JOIN member m ON m.member_sq = c.member_sq 																					
		             LEFT JOIN classroom r ON s.classroom_id = r.classroom_id																			
		             JOIN teacher t ON m.member_sq = t.member_sq																						
		WHERE b.branch_id = #{branch_id}			
		AND TO_CHAR(open_year, 'YYYY') = #{yy}
		AND s.open_smst_id = #{lectSmsterCd}		
		AND s.class_id = #{lectCd}														 																		
	</select>
	
	
	<!-- 강사 프로필 정보 가져오기 -->
	<select id="selectTeacherInfo" resultType="com.culture.demo.domain.TeacherDTO">
		SELECT member_sq, profil_img, teacher_nm, teacher_intro
		FROM teacher
		WHERE member_sq = #{member_sq}
	</select>

	<!-- 강사 프로필 가져오기 -  학력 -->
	<select id="eduInfo" resultType="com.culture.demo.domain.TeducationDTO">
		SELECT e.member_sq, university_tp, university_nm, major, graduate_state, graduate_year
		FROM education e JOIN university_type u ON e.university_tp_id = u.university_tp_id
        			     JOIN graduate_state g ON e.graduate_state_id = g.graduate_state_id 
        WHERE member_sq = #{member_sq}
	</select>
	
	<!-- 강사 프로필 가져오기 - 경력 -->
	<select id="careerInfo" resultType="com.culture.demo.domain.TcareerDTO">
		SELECT member_sq, publisher, start_dt, end_dt
		FROM career
		WHERE member_sq = #{member_sq}
	</select>
	
	<!-- 강사 프로필 가져오기 - 수상 -->
	<select id="awardInfo" resultType="com.culture.demo.domain.TawardsDTO">
		SELECT member_sq, publisher, awards_history, awards_dt
		FROM awards
		WHERE member_sq = #{member_sq}
	</select>
	
	<!-- 강사 프로필 가져오기 - 자격 -->
	<select id="certiInfo" resultType="com.culture.demo.domain.TcertificateDTO">
		SELECT member_sq, publisher, certificate_nm, acquisition_dt
		FROM certificate
		WHERE member_sq = #{member_sq}
	</select>
	

</mapper>